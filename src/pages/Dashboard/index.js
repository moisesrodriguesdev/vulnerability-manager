import React, { useState, useEffect, useContext } from "react";
import { useHistory } from "react-router-dom";
import Card from "./../../Components/Card";
import api from "./../../services/api";
import { Chart } from "react-google-charts";
import Navbar from "./../../Components/NavBar";
import StoreContextApi from "./../../Components/Store/ContextApi";
import "./styles.css";

const Dashboard = () => {
  const { token } = useContext(StoreContextApi);

  const [assets, setAssets] = useState(0);
  const [vulnerability, setVulnerability] = useState(0);
  const [riskMedium, setRiskMedium] = useState(0);
  const [dataChartsSeverity, setDataChartsSeverity] = useState({
    Linguagens: "Quantidade",
  });

  const sanitizeDataChartsSeverity = Object.entries(dataChartsSeverity);

  useEffect(() => {
    async function getHosts() {
      const response = await api.get("dashboard/cards/asset", {
        headers: {
          Authorization: `Token ${token}`,
        },
      });
      setAssets(response.data);
    }

    getHosts();
  }, []);

  useEffect(() => {
    async function getVulnerability() {
      const response = await api.get("dashboard/cards/vulnerability", {
        headers: {
          Authorization: `Token ${token}`,
        },
      });
      setVulnerability(response.data);
    }

    getVulnerability();
  }, []);

  useEffect(() => {
    async function getRiskMedium() {
      const response = await api.get("dashboard/cards/risk", {
        headers: {
          Authorization: `Token ${token}`,
        },
      });
      setRiskMedium(response.data);
    }

    getRiskMedium();
  }, []);

  useEffect(() => {
    async function getChartsSeverity() {
      const response = await api.get("dashboard/charts/severity", {
        headers: {
          Authorization: `Token ${token}`,
        },
      });
      setDataChartsSeverity({ ...dataChartsSeverity, ...response.data });
    }

    getChartsSeverity();
  }, []);
  return (
    <>
      <Navbar />
      <div className="content content-dashboard">
      <h2>Gerenciamento de Vulnerabilidades</h2>
        <div className="row">
          <Card data={assets.asset_count} title="Qtd. Hosts" />
          <Card
            data={assets.vulnerable_asset_count}
            title="Qtd. Hosts Vulneráveis"
          />
          <Card
            data={vulnerability.vuln_count}
            title="Total de vulnerabilidades não corrigidas"
          />
          <Card
            data={vulnerability.active_vuln_count}
            title="Total de vulnerabilidades corrigidas"
          />
          <Card data={riskMedium.risk_avg} title="Média de risco dos hosts" />
        </div>

        <div className="chart-box">
          <div className="chart-content">
            <Chart
              width={"500px"}
              height={"300px"}
              chartType="PieChart"
              data={sanitizeDataChartsSeverity}
              options={{ title: "Vulnerabilidades não corrigidas" }}
            />
          </div>
        </div>
      </div>
    </>
  );
};

export default Dashboard;
